import { Buffer } from "buffer";
import { Client as ContractClient, Spec as ContractSpec, } from '@stellar/stellar-sdk/contract';
export * from '@stellar/stellar-sdk';
export * as contract from '@stellar/stellar-sdk/contract';
export * as rpc from '@stellar/stellar-sdk/rpc';
if (typeof window !== 'undefined') {
    //@ts-ignore Buffer exists
    window.Buffer = window.Buffer || Buffer;
}
export const networks = {
    testnet: {
        networkPassphrase: "Test SDF Network ; September 2015",
        contractId: "CBIETBCJTZUDDBLZKHSFZNZV7OW5VSEPS7JVKWW6V2YFHECBBSKMMROJ",
    }
};
export const ContractError = {
    1: { message: "BountyNotFound" },
    2: { message: "ContractBalanceNotEnoughToSendRewards" },
    3: { message: "TasksNotCompleted" },
    4: { message: "OnlyVolunteerCanWithdrawRewards" },
    5: { message: "AdminNotFound" }
};
export class Client extends ContractClient {
    options;
    static async deploy(
    /** Options for initializing a Client as well as for calling a method, with extras specific to deploying. */
    options) {
        return ContractClient.deploy(null, options);
    }
    constructor(options) {
        super(new ContractSpec(["AAAAAQAAAAAAAAAAAAAABkJvdW50eQAAAAAABgAAAAAAAAAGYW1vdW50AAAAAAALAAAAAAAAAAtkZXNjcmlwdGlvbgAAAAAQAAAAAAAAAAVvd25lcgAAAAAAABMAAAAAAAAABXRhc2tzAAAAAAAD6gAAB9AAAAAEVGFzawAAAAAAAAAFdGl0bGUAAAAAAAAQAAAAAAAAAAl2b2x1bnRlZXIAAAAAAAAT",
            "AAAAAgAAAAAAAAAAAAAACkRpZmZpY3VsdHkAAAAAAAMAAAAAAAAAAAAAAANMb3cAAAAAAAAAAAAAAAAGTWVkaXVtAAAAAAAAAAAAAAAAAARIYXJk",
            "AAAAAQAAAAAAAAAAAAAABFRhc2sAAAAEAAAAAAAAAAljb21wbGV0ZWQAAAAAAAABAAAAAAAAAAtkZXNjcmlwdGlvbgAAAAAQAAAAAAAAAApkaWZmaWN1bHR5AAAAAAfQAAAACkRpZmZpY3VsdHkAAAAAAAAAAAAGc3RhdHVzAAAAAAAQ",
            "AAAAAQAAAAAAAAAAAAAADkFsbG93YW5jZVZhbHVlAAAAAAACAAAAAAAAAAZhbW91bnQAAAAAAAsAAAAAAAAAEWV4cGlyYXRpb25fbGVkZ2VyAAAAAAAABA==",
            "AAAAAQAAAAAAAAAAAAAAEEFsbG93YW5jZURhdGFLZXkAAAACAAAAAAAAAARmcm9tAAAAEwAAAAAAAAAHc3BlbmRlcgAAAAAT",
            "AAAAAgAAAAAAAAAAAAAAB0RhdGFLZXkAAAAABAAAAAAAAAAAAAAABkJvdW50eQAAAAAAAQAAAAAAAAAHQmFsYW5jZQAAAAABAAAAEwAAAAEAAAAAAAAACUFsbG93YW5jZQAAAAAAAAEAAAfQAAAAEEFsbG93YW5jZURhdGFLZXkAAAAAAAAAAAAAAAVBZG1pbgAAAA==",
            "AAAABAAAAAAAAAAAAAAADUNvbnRyYWN0RXJyb3IAAAAAAAAFAAAAAAAAAA5Cb3VudHlOb3RGb3VuZAAAAAAAAQAAAAAAAAAlQ29udHJhY3RCYWxhbmNlTm90RW5vdWdoVG9TZW5kUmV3YXJkcwAAAAAAAAIAAAAAAAAAEVRhc2tzTm90Q29tcGxldGVkAAAAAAAAAwAAAAAAAAAfT25seVZvbHVudGVlckNhbldpdGhkcmF3UmV3YXJkcwAAAAAEAAAAAAAAAA1BZG1pbk5vdEZvdW5kAAAAAAAABQ==",
            "AAAAAAAAAAAAAAAKaW5pdGlhbGl6ZQAAAAAABAAAAAAAAAAFYWRtaW4AAAAAAAATAAAAAAAAAAdkZWNpbWFsAAAAAAQAAAAAAAAABG5hbWUAAAAQAAAAAAAAAAZzeW1ib2wAAAAAABAAAAAA",
            "AAAAAAAAAAAAAAAEbWludAAAAAIAAAAAAAAAAnRvAAAAAAATAAAAAAAAAAZhbW91bnQAAAAAAAsAAAAA",
            "AAAAAAAAAAAAAAAJYWxsb3dhbmNlAAAAAAAAAgAAAAAAAAAEZnJvbQAAABMAAAAAAAAAB3NwZW5kZXIAAAAAEwAAAAEAAAAL",
            "AAAAAAAAAAAAAAAHYXBwcm92ZQAAAAAEAAAAAAAAAARmcm9tAAAAEwAAAAAAAAAHc3BlbmRlcgAAAAATAAAAAAAAAAZhbW91bnQAAAAAAAsAAAAAAAAAEWV4cGlyYXRpb25fbGVkZ2VyAAAAAAAABAAAAAA=",
            "AAAAAAAAAAAAAAAHYmFsYW5jZQAAAAABAAAAAAAAAAJpZAAAAAAAEwAAAAEAAAAL",
            "AAAAAAAAAAAAAAAIdHJhbnNmZXIAAAADAAAAAAAAAARmcm9tAAAAEwAAAAAAAAACdG8AAAAAABMAAAAAAAAABmFtb3VudAAAAAAACwAAAAA=",
            "AAAAAAAAAAAAAAANdHJhbnNmZXJfZnJvbQAAAAAAAAQAAAAAAAAAB3NwZW5kZXIAAAAAEwAAAAAAAAAEZnJvbQAAABMAAAAAAAAAAnRvAAAAAAATAAAAAAAAAAZhbW91bnQAAAAAAAsAAAAA",
            "AAAAAAAAAAAAAAAEYnVybgAAAAIAAAAAAAAABGZyb20AAAATAAAAAAAAAAZhbW91bnQAAAAAAAsAAAAA",
            "AAAAAAAAAAAAAAAJYnVybl9mcm9tAAAAAAAAAwAAAAAAAAAHc3BlbmRlcgAAAAATAAAAAAAAAARmcm9tAAAAEwAAAAAAAAAGYW1vdW50AAAAAAALAAAAAA==",
            "AAAAAAAAAAAAAAAIZGVjaW1hbHMAAAAAAAAAAQAAAAQ=",
            "AAAAAAAAAAAAAAAEbmFtZQAAAAAAAAABAAAAEA==",
            "AAAAAAAAAAAAAAAGc3ltYm9sAAAAAAAAAAAAAQAAABA=",
            "AAAAAAAAAAAAAAANY3JlYXRlX2JvdW50eQAAAAAAAAEAAAAAAAAAEWJvdW50eV9wcm9wZXJ0aWVzAAAAAAAH0AAAAAZCb3VudHkAAAAAAAEAAAPpAAAH0AAAAAZCb3VudHkAAAAAB9AAAAANQ29udHJhY3RFcnJvcgAAAA==",
            "AAAAAAAAAAAAAAAPd2l0aGRyYXdfcmV3YXJkAAAAAAIAAAAAAAAACXZvbHVudGVlcgAAAAAAABMAAAAAAAAACXRydXN0bGluZQAAAAAAABMAAAABAAAD6QAAB9AAAAAGQm91bnR5AAAAAAfQAAAADUNvbnRyYWN0RXJyb3IAAAA=",
            "AAAAAAAAAAAAAAAKZ2V0X2JvdW50eQAAAAAAAAAAAAEAAAPpAAAH0AAAAAZCb3VudHkAAAAAB9AAAAANQ29udHJhY3RFcnJvcgAAAA==",
            "AAAAAQAAAAAAAAAAAAAADVRva2VuTWV0YWRhdGEAAAAAAAADAAAAAAAAAAdkZWNpbWFsAAAAAAQAAAAAAAAABG5hbWUAAAAQAAAAAAAAAAZzeW1ib2wAAAAAABA="]), options);
        this.options = options;
    }
    fromJSON = {
        initialize: (this.txFromJSON),
        mint: (this.txFromJSON),
        allowance: (this.txFromJSON),
        approve: (this.txFromJSON),
        balance: (this.txFromJSON),
        transfer: (this.txFromJSON),
        transfer_from: (this.txFromJSON),
        burn: (this.txFromJSON),
        burn_from: (this.txFromJSON),
        decimals: (this.txFromJSON),
        name: (this.txFromJSON),
        symbol: (this.txFromJSON),
        create_bounty: (this.txFromJSON),
        withdraw_reward: (this.txFromJSON),
        get_bounty: (this.txFromJSON)
    };
}
